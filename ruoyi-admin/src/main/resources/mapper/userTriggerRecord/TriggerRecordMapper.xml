<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.test.mapper.TriggerRecordMapper">
    
    <resultMap type="TriggerRecord" id="TriggerRecordResult">
        <result property="recordnumber"    column="recordnumber"    />
        <result property="userid"    column="userid"    />
        <result property="username"    column="username"    />
        <result property="companyid"    column="companyid"    />
        <result property="companyname"    column="companyname"    />
        <result property="pushway"    column="pushway"    />
        <result property="triggertime"    column="triggertime"    />
        <result property="address"    column="address"    />
    </resultMap>

    <sql id="selectTriggerRecordVo">
        select recordnumber, userid, username, companyid, companyname, pushway, triggertime, address from trigger_record
    </sql>

    <select id="selectTriggerRecordList" parameterType="TriggerRecord" resultMap="TriggerRecordResult">
        <include refid="selectTriggerRecordVo"/>
        <where>  
            <if test="recordnumber != null "> and recordnumber = #{recordnumber}</if>
            <if test="userid != null "> and userid = #{userid}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="companyid != null "> and companyid = #{companyid}</if>
            <if test="companyname != null  and companyname != ''"> and companyname like concat('%', #{companyname}, '%')</if>
            <if test="pushway != null  and pushway != ''"> and pushway = #{pushway}</if>
            <if test="params.beginTriggertime != null and params.beginTriggertime != '' and params.endTriggertime != null and params.endTriggertime != ''"> and triggertime between #{params.beginTriggertime} and #{params.endTriggertime}</if>
            <if test="address != null  and address != ''"> and address = #{address}</if>
        </where>
    </select>
    
    <select id="selectTriggerRecordByRecordnumber" parameterType="Long" resultMap="TriggerRecordResult">
        <include refid="selectTriggerRecordVo"/>
        where recordnumber = #{recordnumber}
    </select>
        
    <insert id="insertTriggerRecord" parameterType="TriggerRecord" useGeneratedKeys="true" keyProperty="recordnumber">
        insert into trigger_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userid != null">userid,</if>
            <if test="username != null">username,</if>
            <if test="companyid != null">companyid,</if>
            <if test="companyname != null">companyname,</if>
            <if test="pushway != null">pushway,</if>
            <if test="triggertime != null">triggertime,</if>
            <if test="address != null">address,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userid != null">#{userid},</if>
            <if test="username != null">#{username},</if>
            <if test="companyid != null">#{companyid},</if>
            <if test="companyname != null">#{companyname},</if>
            <if test="pushway != null">#{pushway},</if>
            <if test="triggertime != null">#{triggertime},</if>
            <if test="address != null">#{address},</if>
         </trim>
    </insert>

    <update id="updateTriggerRecord" parameterType="TriggerRecord">
        update trigger_record
        <trim prefix="SET" suffixOverrides=",">
            <if test="userid != null">userid = #{userid},</if>
            <if test="username != null">username = #{username},</if>
            <if test="companyid != null">companyid = #{companyid},</if>
            <if test="companyname != null">companyname = #{companyname},</if>
            <if test="pushway != null">pushway = #{pushway},</if>
            <if test="triggertime != null">triggertime = #{triggertime},</if>
            <if test="address != null">address = #{address},</if>
        </trim>
        where recordnumber = #{recordnumber}
    </update>

    <delete id="deleteTriggerRecordByRecordnumber" parameterType="Long">
        delete from trigger_record where recordnumber = #{recordnumber}
    </delete>

    <delete id="deleteTriggerRecordByRecordnumbers" parameterType="String">
        delete from trigger_record where recordnumber in 
        <foreach item="recordnumber" collection="array" open="(" separator="," close=")">
            #{recordnumber}
        </foreach>
    </delete>
</mapper>